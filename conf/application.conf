include "securesocial.conf"
include "neo4j.conf"

play.modules.enabled += "modules.LifeCycleModule"
play.http.errorHandler = "controllers.ErrorController"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret="i`n:HyM]]uhBXJ32[R0JdOpH9]?v9H7J<J9_;USxpeujIrmo9sgKtD_>qvDVLvkb"
play.crypto.secret=${?APPLICATION_SECRET}

# The application languages
# ~~~~~
play.i18n.langs=[ "sv" ]

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Set Max file size (10mb)
# 1 MB = 1024 KB
//parsers.MultipartFormData.maxLength=10240K
play.http.parser.maxMemoryBuffer=1024K
//play.http.parser.maxDiskBuffer=


# Mailer
# -----
play.mailer {
  host=smtp.gmail.com
  port=465
  ssl=true
  tls=false
  user="homediningclub@gmail.com"
  password=none
  from="info@homediningclub.se"

  host=${?MAIL_HOST}
  port=${?MAIL_PORT}
  ssl=${?MAIL_SSL}
  tls=${?MAIL_TLS}
  user=${?MAIL_USER}
  password=${?MAIL_PASSWORD}
}


#smtp.from="info@homediningclub.se"

#smtp.host=smtp.gmail.com
#smtp.port=465
#smtp.ssl=yes
#smtp.tls=no
#smtp.user="homediningclub@gmail.com"
#smtp.password=none

#smtp.host=${?MAIL_HOST}
#smtp.port=${?MAIL_PORT}
#smtp.ssl=${?MAIL_SSL}
#smtp.tls=${?MAIL_TLS}
#smtp.user=${?MAIL_USER}
#smtp.password=${?MAIL_PASSWORD}

# Resource plugin save directory
# is relative to app, but can be absolute to filesystem also
res.default=/hdc-files/files

# Scalr image cache location (This is simply another play-res source location)
# All resized images get cached here so they only need to be resized once
res.scalrcache=/hdc-files/cache

# Tell scalr to use scalrcache source we just created to cache it's images
scalr.cache=scalrcache

# Working dir
hdc.wrkDir=/hdc-files/wrk-dir

# DB Backup
backup.servernameorip="127.0.0.1"
backup.servernameorip=${?SERVER_NAME_OR_IP}
backup.dir=/Backup/
backup.dir=${?SERVER_BACKUP_DIR}

play.http.filters=filters.MyFilters

#play.server.https.keyStore.path=
#play.server.https.keyStore.password=
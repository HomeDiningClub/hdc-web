# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Start page
GET         /                                          @controllers.StartPageController.index
POST        /                                          @controllers.StartPageController.filterProfiles

# Home page
GET         /how-does-it-work                          @controllers.ContentController.howDoesItWork
GET         /become-a-member                           @controllers.ContentController.becomeAMember
GET         /become-a-member/the-perfect-guest         @controllers.ContentController.thePerfectGuest
GET         /become-a-host                             @controllers.ContentController.becomeAHost
GET         /become-a-host/practical-info              @controllers.ContentController.practicalInfo
GET         /become-a-host/example-host-text           @controllers.ContentController.exampleHostText
GET         /references                                @controllers.ContentController.references
GET         /about-us                                  @controllers.ContentController.aboutUs
GET         /about-us/press                            @controllers.ContentController.press
GET         /about-us/user-terms-and-conditions        @controllers.ContentController.userTermsAndConditions
GET         /faq                                       @controllers.ContentController.faq
GET         /contact                                   @controllers.ContentController.contact

# Campaign
GET         /newsletter                                @controllers.CampaignController.index

# EDIT - Content
GET         /edit                                      @controllers.EditController.index
GET         /edit/content                              @controllers.ContentController.indexContentPages
GET         /edit/content/list                         @controllers.ContentController.listContentPages
GET         /edit/content/add                          @controllers.ContentController.addContentPage
POST        /edit/content/add                          @controllers.ContentController.addContentPageSubmit
GET         /edit/content/edit/:id                     @controllers.ContentController.editContentPage(id: java.lang.Long)
GET         /edit/content/delete/:id                   @controllers.ContentController.deleteContentPage(id: java.lang.Long)
GET         /edit/content/delete/all                   @controllers.ContentController.deleteAllContent

# EDIT - Recipe
GET         /edit/recipe                               @controllers.RecipeController.indexRecipe
GET         /edit/recipe/list                          @controllers.RecipeController.listRecipes
GET         /edit/recipe/add                           @controllers.RecipeController.addRecipe
POST        /edit/recipe/add                           @controllers.RecipeController.addRecipeSubmit
GET         /edit/recipe/edit/:id                      @controllers.RecipeController.edit(id: java.lang.Long)
GET         /edit/recipe/delete/:id                    @controllers.RecipeController.delete(id: java.lang.Long)
GET         /edit/recipe/delete/all                    @controllers.RecipeController.deleteAll



# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                              controllers.Assets.at(path="/public", file)

# Personer
GET         /personer                                  controllers.Personer.list
GET         /personer/testbild                         controllers.Personer.testbild
GET         /personer/skapa                            controllers.Personer.ny
POST        /personer/skapa                            controllers.Personer.save

GET         /testbild/bild                             controllers.TestBild.testsida


# UserProfile
GET         /profile                                   @controllers.UserProfileController.index
POST        /profile/skapa                             @controllers.UserProfileController.save
POST        /profile/spara                             @controllers.UserProfileController.saveUserProfile
GET         /profile/ny                                @controllers.UserProfileController.skapaNyProfil
GET         /profile/find/:userName                    @controllers.UserProfileController.hamtaProfil(userName)
#GET         /profile/tabort/:userName                  @controllers.UserProfileController.deleteProfil(userName)

# Host
GET         /host                                      @controllers.HostController.index

# Recipe
GET         /host/recipes                              @controllers.RecipeController.index


# Worlds example
GET         /worlds                                    @controllers.WorldController.index


# Files
GET         /file                                      @controllers.FileController.index
POST        /file/add                                  @controllers.FileController.add
GET         /file/add                                  @controllers.FileController.index
GET         /file/delete/:key                          @controllers.FileController.deleteImage(key: java.util.UUID)


# Login page
GET         /login                                     securesocial.controllers.LoginPage.login
GET         /logout                                    securesocial.controllers.LoginPage.logout

# User Registration and password handling
GET         /signup                                    securesocial.controllers.Registration.startSignUp
POST        /signup                                    securesocial.controllers.Registration.handleStartSignUp
GET         /signup/:token                             securesocial.controllers.Registration.signUp(token)
POST        /signup/:token                             securesocial.controllers.Registration.handleSignUp(token)
GET         /reset                                     securesocial.controllers.Registration.startResetPassword
POST        /reset                                     securesocial.controllers.Registration.handleStartResetPassword
GET         /reset/:token                              securesocial.controllers.Registration.resetPassword(token)
POST        /reset/:token                              securesocial.controllers.Registration.handleResetPassword(token)
GET         /password                                  securesocial.controllers.PasswordChange.page
POST        /password                                  securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET         /authenticate/:provider                    securesocial.controllers.ProviderController.authenticate(provider)
POST        /authenticate/:provider                    securesocial.controllers.ProviderController.authenticateByPost(provider)
GET         /not-authorized                            securesocial.controllers.ProviderController.notAuthorized

# TEST
GET         /profile/loggain                           @controllers.UserProfileController.login


GET         /profilen/spara                            @controllers.UserCredentialController.spara
GET         /profilen/visa                             @controllers.UserCredentialController.visa

# New profile
GET         /prodata/visa                               @controllers.UserProfileController.skapavy
POST        /prodata/skicka                             @controllers.UserProfileController.taemot

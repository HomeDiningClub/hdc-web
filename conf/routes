# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /index                         controllers.Application.index

# Campaign
GET         /                              controllers.Campaign.index

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                  controllers.Assets.at(path="/public", file)

# Personer
GET         /personer                      controllers.Personer.list
GET         /personer/skapa                controllers.Personer.ny
POST        /personer/skapa                controllers.Personer.save

# UserProfile
GET         /profile                       @controllers.UserProfileController.index
POST        /profile/skapa                 @controllers.UserProfileController.save
POST        /profile/spara                 @controllers.UserProfileController.saveUserProfile
GET         /profile/ny                    @controllers.UserProfileController.skapaNyProfil
GET         /profile/find/:userName        @controllers.UserProfileController.hamtaProfil(userName)


# Worlds example
GET         /worlds                        @controllers.WorldController.index
#POST        /worlds/add                    controllers.WorldController.add
#POST        /worlds/delete                 controllers.WorldController.delete


# Login page
GET         /login                         securesocial.controllers.LoginPage.login
GET         /logout                        securesocial.controllers.LoginPage.logout

# User Registration and password handling
GET         /signup                        securesocial.controllers.Registration.startSignUp
POST        /signup                        securesocial.controllers.Registration.handleStartSignUp
GET         /signup/:token                 securesocial.controllers.Registration.signUp(token)
POST        /signup/:token                 securesocial.controllers.Registration.handleSignUp(token)
GET         /reset                         securesocial.controllers.Registration.startResetPassword
POST        /reset                         securesocial.controllers.Registration.handleStartResetPassword
GET         /reset/:token                  securesocial.controllers.Registration.resetPassword(token)
POST        /reset/:token                  securesocial.controllers.Registration.handleResetPassword(token)
GET         /password                      securesocial.controllers.PasswordChange.page
POST        /password                      securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET         /authenticate/:provider        securesocial.controllers.ProviderController.authenticate(provider)
POST        /authenticate/:provider        securesocial.controllers.ProviderController.authenticateByPost(provider)
GET         /not-authorized                securesocial.controllers.ProviderController.notAuthorized
# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Start page
GET         /                                          @controllers.StartPageController.index
POST        /                                          @controllers.StartPageController.filterProfiles

# Home page
GET         /how-does-it-work                          @controllers.ContentController.howDoesItWork
GET         /become-a-member                           @controllers.ContentController.becomeAMember
GET         /become-a-member/the-perfect-guest         @controllers.ContentController.thePerfectGuest
GET         /become-a-host                             @controllers.ContentController.becomeAHost
GET         /become-a-host/practical-info              @controllers.ContentController.practicalInfo
GET         /become-a-host/example-host-text           @controllers.ContentController.exampleHostText
GET         /references                                @controllers.ContentController.references
GET         /about-us                                  @controllers.ContentController.aboutUs
GET         /about-us/press                            @controllers.ContentController.press
GET         /about-us/user-terms-and-conditions        @controllers.ContentController.userTermsAndConditions
GET         /faq                                       @controllers.ContentController.faq
GET         /contact                                   @controllers.ContentController.contact

# Campaign
GET         /newsletter                                @controllers.CampaignController.index

# EDIT
GET         /edit                                      @controllers.EditController.index

# EDIT - Content
GET         /edit/content                              @controllers.ContentController.index
GET         /edit/content/listall                      @controllers.ContentController.listAll
GET         /edit/content/add                          @controllers.ContentController.add
POST        /edit/content/add                          @controllers.ContentController.addSubmit
GET         /edit/content/edit/:objectId               @controllers.ContentController.edit(objectId: java.util.UUID)
GET         /edit/content/delete/:objectId             @controllers.ContentController.delete(objectId: java.util.UUID)

# EDIT - Recipe
GET         /edit/recipe                               @controllers.RecipeController.index
GET         /edit/recipe/listall                       @controllers.RecipeController.listAll
GET         /edit/recipe/add                           @controllers.RecipeController.add
POST        /edit/recipe/add                           @controllers.RecipeController.addSubmit
GET         /edit/recipe/edit/:objectId                @controllers.RecipeController.edit(objectId: java.util.UUID)
GET         /edit/recipe/delete/:objectId              @controllers.RecipeController.delete(objectId: java.util.UUID)

# EDIT - County
GET         /edit/county                               @controllers.CountyController.index
GET         /edit/county/listall                       @controllers.CountyController.listAll
GET         /edit/county/add                           @controllers.CountyController.add
POST        /edit/county/add                           @controllers.CountyController.addSubmit
GET         /edit/county/edit/:objectId                @controllers.CountyController.edit(objectId: java.util.UUID)
GET         /edit/county/delete/:objectId              @controllers.CountyController.delete(objectId: java.util.UUID)

# EDIT - Roles
GET         /edit/roles                                @controllers.UserRoleController.index
GET         /edit/roles/listall                        @controllers.UserRoleController.listAll
GET         /edit/roles/add                            @controllers.UserRoleController.add
POST        /edit/roles/add                            @controllers.UserRoleController.addSubmit
GET         /edit/roles/edit/:objectId                 @controllers.UserRoleController.edit(objectId: java.util.UUID)
GET         /edit/roles/delete/:objectId               @controllers.UserRoleController.delete(objectId: java.util.UUID)
GET         /edit/roles/addUserToRole                  @controllers.UserRoleController.addUserToRole
POST        /edit/roles/addUserToRole                  @controllers.UserRoleController.addUserToRoleSubmit


# EDIT - TagWords
GET         /edit/tagword                              @controllers.TagWordController.index
GET         /edit/tagword/listall                      @controllers.TagWordController.listAll
GET         /edit/tagword/add                          @controllers.TagWordController.add
POST        /edit/tagword/add                          @controllers.TagWordController.addSubmit
GET         /edit/tagword/edit/:objectId               @controllers.TagWordController.edit(objectId: java.util.UUID)
GET         /edit/tagword/delete/:objectId             @controllers.TagWordController.delete(objectId: java.util.UUID)

# EDIT - Release & Batch
GET        /edit/release                               @controllers.ReleaseController.index
GET        /edit/release/run                           @controllers.ReleaseController.releaseRun
GET        /edit/release/deleteall                     @controllers.ReleaseController.deleteAllFromDB



# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                              controllers.Assets.at(path="/public", file)


# UserProfile
GET         /profile                                   @controllers.UserProfileController.index
POST        /profile/skapa                             @controllers.UserProfileController.save
POST        /profile/spara                             @controllers.UserProfileController.saveUserProfile
GET         /profile/ny                                @controllers.UserProfileController.skapaNyProfil
GET         /profile/find/:userName                    @controllers.UserProfileController.hamtaProfil(userName)


# Host
GET         /host                                      @controllers.HostController.index
GET         /host/:objectId                            @controllers.HostController.indexHost(objectId: java.util.UUID)

# Recipe
GET         /host/recipes                              @controllers.RecipeController.index


# Worlds example
GET         /worlds                                    @controllers.WorldController.index


# Files
GET         /edit/file                                 @controllers.FileController.index
POST        /edit/file/add                             @controllers.FileController.add
GET         /edit/file/delete/:objectId                @controllers.FileController.deleteImage(objectId: java.util.UUID)


# Login page
GET         /login                                     securesocial.controllers.LoginPage.login
GET         /logout                                    securesocial.controllers.LoginPage.logout

# User Registration and password handling
GET         /signup                                    securesocial.controllers.Registration.startSignUp
POST        /signup                                    securesocial.controllers.Registration.handleStartSignUp
GET         /signup/:token                             securesocial.controllers.Registration.signUp(token)
POST        /signup/:token                             securesocial.controllers.Registration.handleSignUp(token)
GET         /reset                                     securesocial.controllers.Registration.startResetPassword
POST        /reset                                     securesocial.controllers.Registration.handleStartResetPassword
GET         /reset/:token                              securesocial.controllers.Registration.resetPassword(token)
POST        /reset/:token                              securesocial.controllers.Registration.handleResetPassword(token)
GET         /password                                  securesocial.controllers.PasswordChange.page
POST        /password                                  securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET         /authenticate/:provider                    securesocial.controllers.ProviderController.authenticate(provider)
POST        /authenticate/:provider                    securesocial.controllers.ProviderController.authenticateByPost(provider)
GET         /not-authorized                            securesocial.controllers.ProviderController.notAuthorized

# TEST
GET         /profile/loggain                           @controllers.UserProfileController.login


# New profile
GET         /prodata/visa                              @controllers.UserProfileController.skapavy
POST        /prodata/skicka                            @controllers.UserProfileController.taemot
GET         /prodata/skapa                             @controllers.UserProfileController.createTags
GET         /prodata/test                              @controllers.UserProfileController.test
